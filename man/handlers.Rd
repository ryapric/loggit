% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/handlers.R
\name{handlers}
\alias{handlers}
\alias{message}
\alias{warning}
\alias{stop}
\alias{stopifnot}
\title{loggit's Exception Handlers}
\usage{
message(..., domain = NULL, appendLF = TRUE, .loggit = TRUE, echo = TRUE)

warning(
  ...,
  call. = TRUE,
  immediate. = FALSE,
  noBreaks. = FALSE,
  domain = NULL,
  .loggit = TRUE,
  echo = TRUE
)

stop(..., call. = TRUE, domain = NULL, .loggit = TRUE, echo = TRUE)

stopifnot(..., echo = TRUE)
}
\arguments{
\item{...}{
  Arguments passed on to \code{\link[base:stopifnot]{base::stopifnot}}
  \describe{
    \item{\code{exprObject}}{alternative to \code{exprs} or \code{...}:
    an \sQuote{expression-like} object, typically an
    \code{\link[base]{expression}}, but also a \code{\link[base]{call}}, a
    \code{\link[base]{name}}, or atomic constant such as \code{TRUE}.
  }
    \item{\code{local}}{(only when \code{exprs} is used:) indicates the
    \code{\link[base]{environment}} in which the expressions should be
    evaluated; by default the one from where \code{stopifnot()} has been
    called.}
  }}

\item{domain}{see \code{\link[base]{gettext}}.  If \code{NA}, messages will
    not be translated, see also the note in \code{\link[base]{stop}}.}

\item{appendLF}{logical: should messages given as a character string
    have a newline appended?}

\item{.loggit}{Should loggit function execute? Defaults to \code{TRUE}.}

\item{echo}{Should loggit's log entry be echoed to the console, as well?
Defaults to \code{TRUE}.}

\item{call.}{logical, indicating if the call should become part of the
    warning message.}

\item{immediate.}{logical, indicating if the call should be output
    immediately, even if \code{\link[base]{getOption}("warn") <= 0}.}

\item{noBreaks.}{logical, indicating as far as possible the message should
    be output as a single line when \code{options(warn = 1)}.}
}
\description{
These exception handlers are identical to base R's \link[base:message]{message},
\link[base:warning]{warning}, and \link[base:stop]{stop}, but with included logging
of the exception messages via \code{loggit()}.
}
\examples{
  if (2 < 1) message("Don't say such silly things!")

  if (2 < 1) warning("You may want to review that math, and so this is your warning")

  if (2 < 1) stop("This is a completely false condition, which throws an error")

  stopifnot("This is a completely false condition, which throws an error" = 1 > 2)

}
